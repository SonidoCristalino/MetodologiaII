Refuerzo de conceptos: 
    Se tratará de trabajar con alguna metodología en la materia. 

    Evaluación: 2 examenes: metologías ágiles + POO
    También se debería de presentar un trabajo donde se debe aplicar un grupo de
    5 sobre un negocio a definir por el mismo equipo. 

    enviar la práctica de los lunes a: ccappe2013@gmail.com

Metologias ágiles: 
    Es una forma de encarar un proyecto de software con respecto a las
    tradicionales. Es un conjunto de métodos. Es mucho mas que una técnica ya
    que involucra un equipo multidisciplinario. 
    Las metodologías ágiles se aplican a proyectos dinámicos. 
    Las tradicionales se aplican cuando los sistemas de software son más
    estáticos. En las tradicionales se tienen más acento en la planificación. 
    
    Agiles: como son sistemas dinamicos que manejan cortos plazos, si se quiere
    saber lo que se quiere saber lo que se haraá en 6 meses, no se puede con
    respecto a la tradiciconal. ¿Se aplican para cualquier sistema? No. Hay
    casos en los que se siguen requiriendo los tradicionales. 

    Principios son 12, son super generales. Si uno no se cumple, no se considera
    ágil, pero no se considera si se aplican todas las demas. 

    Aparecen a partir de los 70, pero la metodología ágil se diseño en el 2001,
    pero hubo antes algunos esbozos de este tipo de prácticas. 

    12 Principios: 
        En la época de antaño se invertía mucho tiempo en la planificación y en
        la documentación, diagramas, refinamiento, etc. Luego de todo esto se
        comenzaba a codificar. Para este punto las modificaciones fueron tantas
        que lo entregado no era satisfactorio para el cliente. 
        Comenzaron a surgir prototipos, un estilo de maqueta para el cliente. 
        Sobre el final se hacían las pruebas, por lo que si se quería hacer un
        cambio no se tiene en cuenta, por lo que es much más difícil. 

        En cambio los entregables son más flexibles, por lo que permite avanzar
        más rápidamente. Algunas metodologías son más flexibles a los cambios
        que pueda producir el cliente, aun dentro de la misma iteraciones y
        otros no (cuando no se aceptan más cambios en las iteraciones Se utiliza
        para comprometer más al cliente, para que defina más lo que
        requiere). 
        Siempre el cliente está, algunas veces participa activamente y en otras
        no. 

        Iteraciones deben durar de 1 a 4 semanas, y se produce TODO el
        entregable: Diseño, planificación, implementación, prueba, etc. Y se
        entrega todo funcionando. 

        Cliente siempre presente, depende de la metodología depende de si forma
        parte activa o más pasiva. En el momento de la iteración algunas veces
        está para que le hagna consulta y NO para modificar lo solicitado. 

        Se trata de trabajar en el mismo lugar que esté el cliente. Lo mejor es
        que sea entre medio de 9 personas, todas las mañanas se hacen las
        reuniones de sincronización para explicar lo que está haciendo cada uno;
        todo s saben lo que hace cada uno, qué problemas tuvo, qué va a hacer. 

        Si se dividen en iteraciones, entonces se puede ir midiendo a medida que
        estas evolucionan y se entregan. 
        Si hay una entrega ques es difícil de llegar a tiempo, NO se toma
        personal extra, y TAMPOCO se hacen horas extras, sino que se subdividen
        los problemas, y se extienden los plazos. 

        Diseños simples, sin complejizar las cosas, y refactorizar el código:
        para qu quede un código prolijo y simple. 
        
        Equipos autorganizados, equipos totalmente adaptativos a las
        circunstancias. 

        En comparación con la ingeniería de software tradicional, el desarrollo
        ágil se dirige principalmente a los sistemas complejos y proyectos con
        características dinámicas, donde las estimaciones precisas, los planes
        estables y las predicciones son a menudo difíciles de conseguir en las
        primeras etapas, y grandes... (de la filmina)
        La tradicional permite saber lo que se llegará a hacer dentor de 6
        meses. 

        En las pruebas se puden hacer concurrentes a cada iteración. 
        Se documenta lo mínimo e indispensable para que se lleve a cabo la
        iteración. Pero tampoco es bueno documentar tan poco. 

        La parte de frameworks (pag 36-41) NO SE TOMA. 

        Algunos consideran que las metodologias ágiles son muy extremas por lo
        que no se implementa, pero según el mercado como evoluciona rápidamente,
        se implementa de a poco en otros tipos de proyectos. 

--------------------------------------------------------------------------------
                            2da Parte
--------------------------------------------------------------------------------
Diagrama de clases. 
Si dentro de una clase Auto, tengo un tipo de dato "motor" y esta tiene muchos
datos que se le pueden atribuir, entonces acá se debe poner una relación de
"composición" 1 auto ------ tiene 1 motor 

Ejercicio 2: 
Vehículo 
 |     |
auto camión

Ejercicio 3: 
    Persona, 
    empleado , 
    empleado administrativo (reciben un salario de acuerdo a la categoria y
            antiguedad), 
    técnico (tiene un título y trabaja por contrato)


En un diagrama de secuencia se representan los objetos que stán involucrados en
la parte superior de la caja. 
(En la carpeta). 

[ ] [ ] [ ] ----> objetos.  
 |   |   |
 |   |   | mensaje(,,,) -- > mensaje que recibe el objeto
 |   |   |
 |   |   |
 |   |   |
 |   |   |
 |   |   |-----------------> tiempo de vida

Se debe tener en cuenta que los objetos de tipo "tabla de cuentas" sólo sirven
para ser como paso intermedio antes de comunicarse con el objeto particular en
sí mismo, el cual sería "cuenta nº 1". 

Para el ejercicio 6: 
    Se debe tener en cuenta que cuando se ingresa al cajero automático ya
    directamnete se tiene cuando se loguea la cuenta y el saldo, por lo que
    todas las validaciones del diagrama de secuencia que se hicieron en el
    ejemplo al comienzo de la carpeta, no se deberían hacer o sino hacerlo
    ANTES, pero NO MIENTRAS. 

